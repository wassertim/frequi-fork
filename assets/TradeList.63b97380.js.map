{"version":3,"file":"TradeList.63b97380.js","sources":["../../node_modules/vue-material-design-icons/CloseBoxMultiple.vue","../../node_modules/vue-material-design-icons/GestureTap.vue","../../node_modules/vue-material-design-icons/CloseBox.vue","../../src/components/ftbot/TradeActionsPopover.vue","../../src/components/ftbot/ForceExitForm.vue","../../src/components/ftbot/TradeList.vue"],"sourcesContent":["<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon close-box-multiple-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M4 20H18V22H4C2.9 22 2 21.11 2 20V6H4V20M20.22 2H7.78C6.8 2 6 2.8 6 3.78V16.22C6 17.2 6.8 18 7.78 18H20.22C21.2 18 22 17.2 22 16.22V3.78C22 2.8 21.2 2 20.22 2M19 13.6L17.6 15L14 11.4L10.4 15L9 13.6L12.6 10L9 6.4L10.4 5L14 8.6L17.6 5L19 6.4L15.4 10L19 13.6Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"CloseBoxMultipleIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon gesture-tap-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M10,9A1,1 0 0,1 11,8A1,1 0 0,1 12,9V13.47L13.21,13.6L18.15,15.79C18.68,16.03 19,16.56 19,17.14V21.5C18.97,22.32 18.32,22.97 17.5,23H11C10.62,23 10.26,22.85 10,22.57L5.1,18.37L5.84,17.6C6.03,17.39 6.3,17.28 6.58,17.28H6.8L10,19V9M11,5A4,4 0 0,1 15,9C15,10.5 14.2,11.77 13,12.46V11.24C13.61,10.69 14,9.89 14,9A3,3 0 0,0 11,6A3,3 0 0,0 8,9C8,9.89 8.39,10.69 9,11.24V12.46C7.8,11.77 7,10.5 7,9A4,4 0 0,1 11,5Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"GestureTapIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon close-box-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M19,3H16.3H7.7H5A2,2 0 0,0 3,5V7.7V16.4V19A2,2 0 0,0 5,21H7.7H16.4H19A2,2 0 0,0 21,19V16.3V7.7V5A2,2 0 0,0 19,3M15.6,17L12,13.4L8.4,17L7,15.6L10.6,12L7,8.4L8.4,7L12,10.6L15.6,7L17,8.4L13.4,12L17,15.6L15.6,17Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"CloseBoxIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<script setup lang=\"ts\">\nimport ActionIcon from 'vue-material-design-icons/GestureTap.vue';\nimport TradeActions from './TradeActions.vue';\nimport CancelIcon from 'vue-material-design-icons/Cancel.vue';\nimport { Trade } from '@/types';\nimport { ref } from 'vue';\n\ndefineProps({\n  trade: { type: Object as () => Trade, required: true },\n  id: { type: Number, required: true },\n  botApiVersion: { type: Number, required: true },\n});\nconst emit = defineEmits(['forceExit', 'forceExitPartial', 'cancelOpenOrder', 'deleteTrade']);\nconst popoverOpen = ref(false);\n\nconst forceExitHandler = (item: Trade, ordertype: string | undefined = undefined) => {\n  popoverOpen.value = false;\n  emit('forceExit', item, ordertype);\n};\nconst forceExitPartialHandler = (item: Trade) => {\n  popoverOpen.value = false;\n  emit('forceExitPartial', item);\n};\nconst cancelOpenOrderHandler = (item: Trade) => {\n  popoverOpen.value = false;\n  emit('cancelOpenOrder', item);\n};\n</script>\n\n<template>\n  <div>\n    <b-button\n      :id=\"`btn-actions-${id}`\"\n      class=\"btn-xs\"\n      size=\"sm\"\n      title=\"Actions\"\n      @click=\"popoverOpen = !popoverOpen\"\n    >\n      <ActionIcon :size=\"16\" title=\"Actions\" />\n    </b-button>\n    <b-popover\n      :target=\"`btn-actions-${id}`\"\n      :title=\"`Actions for ${trade.pair}`\"\n      triggers=\"manual\"\n      :show=\"popoverOpen\"\n      placement=\"left\"\n    >\n      <trade-actions\n        :trade=\"trade\"\n        :bot-api-version=\"botApiVersion\"\n        @force-exit=\"forceExitHandler\"\n        @force-exit-partial=\"forceExitPartialHandler\"\n        @deleteTrade=\"\n          popoverOpen = false;\n          $emit('deleteTrade', trade);\n        \"\n        @cancel-open-order=\"cancelOpenOrderHandler\"\n      />\n      <b-button class=\"mt-1 w-100 text-start\" size=\"sm\" @click=\"popoverOpen = false\">\n        <CancelIcon :size=\"16\" title=\"Close popup\" class=\"me-1\" />Close Actions menu\n      </b-button>\n    </b-popover>\n  </div>\n</template>\n\n<style scoped></style>\n","<template>\n  <div>\n    <b-modal\n      id=\"forceexit-modal\"\n      v-model=\"model\"\n      title=\"Force exiting a trade\"\n      @show=\"resetForm\"\n      @hidden=\"resetForm\"\n      @ok=\"handleEntry\"\n    >\n      <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\n        <p>\n          <span>Exiting Trade #{{ trade.trade_id }} {{ trade.pair }}.</span>\n          <br />\n          <span>Currently owning {{ trade.amount }} {{ trade.base_currency }}</span>\n        </p>\n        <b-form-group\n          v-if=\"botStore.activeBot.botApiVersion > 1.12\"\n          :label=\"`*Amount in ${trade.base_currency} [optional]`\"\n          label-for=\"stake-input\"\n          invalid-feedback=\"Amount must be empty or a positive number\"\n          :state=\"amount !== undefined && amount > 0\"\n        >\n          <b-form-input\n            id=\"stake-input\"\n            v-model=\"amount\"\n            type=\"number\"\n            step=\"0.000001\"\n            @keydown.enter.native=\"handleEntry\"\n          ></b-form-input>\n          <b-form-input\n            id=\"stake-input\"\n            v-model=\"amount\"\n            type=\"range\"\n            step=\"0.000001\"\n            min=\"0\"\n            :max=\"trade.amount\"\n            @keydown.enter.native=\"handleEntry\"\n          ></b-form-input>\n        </b-form-group>\n\n        <b-form-group\n          v-if=\"botStore.activeBot.botApiVersion > 1.1\"\n          label=\"*OrderType\"\n          label-for=\"ordertype-input\"\n          invalid-feedback=\"OrderType\"\n          :state=\"ordertype !== undefined\"\n        >\n          <b-form-select\n            v-model=\"ordertype\"\n            class=\"ms-2\"\n            :options=\"['market', 'limit']\"\n            style=\"min-width: 7em\"\n            size=\"sm\"\n          >\n          </b-form-select>\n        </b-form-group>\n      </form>\n    </b-modal>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport { ForceSellPayload, Trade } from '@/types';\n\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  trade: {\n    type: Object as () => Trade,\n    required: true,\n  },\n  modelValue: { required: true, default: false, type: Boolean },\n});\nconst emit = defineEmits(['update:modelValue']);\nconst botStore = useBotStore();\n\nconst form = ref<HTMLFormElement>();\nconst amount = ref<number | undefined>(undefined);\nconst ordertype = ref('limit');\n\nconst checkFormValidity = () => {\n  const valid = form.value?.checkValidity();\n\n  return valid;\n};\n\nconst model = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(value: boolean) {\n    emit('update:modelValue', value);\n  },\n});\n\nconst handleSubmit = () => {\n  // Exit when the form isn't valid\n  if (!checkFormValidity()) {\n    return;\n  }\n  // call forceentry\n  const payload: ForceSellPayload = { tradeid: String(props.trade.trade_id) };\n\n  if (ordertype.value) {\n    payload.ordertype = ordertype.value;\n  }\n  if (amount.value) {\n    payload.amount = amount.value;\n  }\n  botStore.activeBot.forceexit(payload);\n  model.value = false;\n};\nconst resetForm = () => {\n  amount.value = props.trade.amount;\n  if (botStore.activeBot.botApiVersion > 1.1) {\n    ordertype.value =\n      botStore.activeBot.botState?.order_types?.force_exit ||\n      botStore.activeBot.botState?.order_types?.exit ||\n      'limit';\n  }\n};\n\nconst handleEntry = () => {\n  // Trigger submit handler\n  handleSubmit();\n};\n</script>\n","<template>\n  <div class=\"h-100 overflow-auto w-100\">\n    <b-table\n      ref=\"tradesTable\"\n      small\n      hover\n      stacked=\"md\"\n      :items=\"\n        trades.filter(\n          (t) =>\n            t.pair.toLowerCase().includes(filterText.toLowerCase()) ||\n            t.exit_reason?.toLowerCase().includes(filterText.toLowerCase()) ||\n            t.enter_tag?.toLowerCase().includes(filterText.toLowerCase()),\n        )\n      \"\n      :fields=\"tableFields\"\n      show-empty\n      :empty-text=\"emptyText\"\n      :per-page=\"perPage\"\n      :current-page=\"currentPage\"\n      primary-key=\"botTradeId\"\n      selectable\n      :select-head=\"false\"\n      select-mode=\"single\"\n      @row-contextmenu=\"handleContextMenuEvent\"\n      @row-clicked=\"onRowClicked\"\n      @row-selected=\"onRowSelected\"\n    >\n      <template #cell(actions)=\"row\">\n        <TradeActionsPopover\n          :id=\"row.index\"\n          :trade=\"row.item\"\n          :bot-api-version=\"botStore.activeBot.botApiVersion\"\n          @deleteTrade=\"removeTradeHandler(row.item)\"\n          @forceExit=\"forceExitHandler\"\n          @forceExitPartial=\"forceExitPartialHandler\"\n          @cancel-open-order=\"cancelOpenOrderHandler\"\n        />\n      </template>\n      <template #cell(pair)=\"row\">\n        <span>\n          {{\n            `${row.item.pair}${\n              row.item.open_order_id === undefined || row.item.open_order_id === null ? '' : '*'\n            }`\n          }}\n        </span>\n      </template>\n      <template #cell(trade_id)=\"row\">\n        {{ row.item.trade_id }}\n        {{\n          botStore.activeBot.botApiVersion > 2.0 && row.item.trading_mode !== 'spot'\n            ? '| ' + (row.item.is_short ? 'Short' : 'Long')\n            : ''\n        }}\n      </template>\n      <template #cell(stake_amount)=\"row\">\n        {{ formatPriceWithDecimals(row.item.stake_amount) }}\n        {{ row.item.trading_mode !== 'spot' ? `(${row.item.leverage}x)` : '' }}\n      </template>\n      <template #cell(profit)=\"row\">\n        <trade-profit :trade=\"row.item\" />\n      </template>\n      <template #cell(open_timestamp)=\"row\">\n        <DateTimeTZ :date=\"row.item.open_timestamp\" />\n      </template>\n      <template #cell(close_timestamp)=\"row\">\n        <DateTimeTZ :date=\"row.item.close_timestamp\" />\n      </template>\n    </b-table>\n    <div class=\"w-100 d-flex justify-content-between\">\n      <b-pagination\n        v-if=\"!activeTrades\"\n        v-model=\"currentPage\"\n        :total-rows=\"rows\"\n        :per-page=\"perPage\"\n        aria-controls=\"my-table\"\n      ></b-pagination>\n      <b-form-input\n        v-if=\"showFilter\"\n        v-model=\"filterText\"\n        type=\"text\"\n        placeholder=\"Filter\"\n        size=\"sm\"\n        style=\"width: unset\"\n      />\n    </div>\n    <force-exit-form v-if=\"activeTrades\" v-model=\"forceExitVisible\" :trade=\"feTrade\" />\n    <b-modal v-model=\"removeTradeVisible\" title=\"Exit trade\" @ok=\"forceExitExecuter\">\n      {{ confirmExitText }}\n    </b-modal>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { formatPercent, formatPrice } from '@/shared/formatters';\nimport { MultiDeletePayload, MultiForcesellPayload, Trade } from '@/types';\nimport DateTimeTZ from '@/components/general/DateTimeTZ.vue';\nimport TradeProfit from './TradeProfit.vue';\nimport TradeActionsPopover from './TradeActionsPopover.vue';\nimport ForceExitForm from '@/components/ftbot/ForceExitForm.vue';\n\nimport { ref, computed, watch } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport { useRouter } from 'vue-router';\n\nenum ModalReasons {\n  removeTrade,\n  forceExit,\n  forceExitPartial,\n  cancelOpenOrder,\n}\n\nconst props = defineProps({\n  trades: { required: true, type: Array as () => Array<Trade> },\n  title: { default: 'Trades', type: String },\n  stakeCurrency: { required: false, default: '', type: String },\n  activeTrades: { default: false, type: Boolean },\n  showFilter: { default: false, type: Boolean },\n  multiBotView: { default: false, type: Boolean },\n  emptyText: { default: 'No Trades to show.', type: String },\n});\nconst botStore = useBotStore();\nconst router = useRouter();\nconst currentPage = ref(1);\nconst selectedItemIndex = ref();\nconst filterText = ref('');\nconst feTrade = ref<Trade>({} as Trade);\nconst perPage = props.activeTrades ? 200 : 15;\nconst tradesTable = ref<HTMLFormElement>();\nconst forceExitVisible = ref(false);\nconst removeTradeVisible = ref(false);\nconst confirmExitText = ref('');\nconst confirmExitValue = ref<ModalReasons | null>(null);\n\nconst openFields: Record<string, string | Function>[] = [{ key: 'actions' }];\nconst closedFields: Record<string, string | Function>[] = [\n  { key: 'close_timestamp', label: 'Close date' },\n  { key: 'exit_reason', label: 'Close Reason' },\n];\nconst formatPriceWithDecimals = (price) => {\n  return formatPrice(price, botStore.activeBot.stakeCurrencyDecimals);\n};\nconst rows = computed(() => {\n  return props.trades.length;\n});\n\nconst tableFields: Record<string, string | Function>[] = [\n  props.multiBotView ? { key: 'botName', label: 'Bot' } : {},\n  { key: 'trade_id', label: 'ID' },\n  { key: 'pair', label: 'Pair' },\n  { key: 'amount', label: 'Amount' },\n  {\n    key: 'stake_amount',\n    label: 'Stake amount',\n  },\n  {\n    key: 'open_rate',\n    label: 'Open rate',\n    formatter: (value: number) => formatPrice(value),\n  },\n  {\n    key: props.activeTrades ? 'current_rate' : 'close_rate',\n    label: props.activeTrades ? 'Current rate' : 'Close rate',\n    formatter: (value: number) => formatPrice(value),\n  },\n  {\n    key: 'profit',\n    label: props.activeTrades ? 'Current profit %' : 'Profit %',\n    formatter: (value: number, key, item: Trade) => {\n      const percent = formatPercent(item.profit_ratio, 2);\n      return `${percent} ${`(${formatPriceWithDecimals(item.profit_abs)})`}`;\n    },\n  },\n  { key: 'open_timestamp', label: 'Open date' },\n  ...(props.activeTrades ? openFields : closedFields),\n];\nconst feOrderType = ref<string | undefined>(undefined);\nconst forceExitHandler = (item: Trade, ordertype: string | undefined = undefined) => {\n  feTrade.value = item;\n  confirmExitValue.value = ModalReasons.forceExit;\n  confirmExitText.value = `Really exit trade ${item.trade_id} (Pair ${item.pair}) using ${ordertype} Order?`;\n  removeTradeVisible.value = true;\n  feOrderType.value = ordertype;\n};\n\nconst forceExitExecuter = () => {\n  if (confirmExitValue.value === ModalReasons.removeTrade) {\n    const payload: MultiDeletePayload = {\n      tradeid: String(feTrade.value.trade_id),\n      botId: feTrade.value.botId,\n    };\n    botStore.deleteTradeMulti(payload).catch((error) => console.log(error.response));\n  }\n  if (confirmExitValue.value === ModalReasons.forceExit) {\n    const payload: MultiForcesellPayload = {\n      tradeid: String(feTrade.value.trade_id),\n      botId: feTrade.value.botId,\n    };\n    if (feOrderType.value) {\n      payload.ordertype = feOrderType.value;\n    }\n    botStore\n      .forceSellMulti(payload)\n      .then((xxx) => console.log(xxx))\n      .catch((error) => console.log(error.response));\n  }\n  if (confirmExitValue.value === ModalReasons.cancelOpenOrder) {\n    const payload: MultiDeletePayload = {\n      tradeid: String(feTrade.value.trade_id),\n      botId: feTrade.value.botId,\n    };\n    botStore.cancelOpenOrderMulti(payload);\n  }\n\n  feOrderType.value = undefined;\n  removeTradeVisible.value = false;\n};\n\nconst removeTradeHandler = (item: Trade) => {\n  confirmExitText.value = `Really delete trade ${item.trade_id} (Pair ${item.pair})?`;\n  confirmExitValue.value = ModalReasons.removeTrade;\n  feTrade.value = item;\n  removeTradeVisible.value = true;\n};\n\nconst forceExitPartialHandler = (item: Trade) => {\n  feTrade.value = item;\n  forceExitVisible.value = true;\n};\n\nconst cancelOpenOrderHandler = (item: Trade) => {\n  confirmExitText.value = `Cancel open order for trade ${item.trade_id} (Pair ${item.pair})?`;\n  feTrade.value = item;\n  confirmExitValue.value = ModalReasons.cancelOpenOrder;\n  removeTradeVisible.value = true;\n};\n\nconst handleContextMenuEvent = (item, index, event) => {\n  // stop browser context menu from appearing\n  if (!props.activeTrades) {\n    return;\n  }\n  event.preventDefault();\n  // log the selected item to the console\n  console.log(item);\n};\n\nconst onRowClicked = (item) => {\n  if (props.multiBotView && botStore.selectedBot !== item.botId) {\n    // Multibotview - on click switch to the bot trade view\n    botStore.selectBot(item.botId);\n  }\n  if (item && item.trade_id !== botStore.activeBot.detailTradeId) {\n    botStore.activeBot.setDetailTrade(item);\n    if (props.multiBotView) {\n      router.push({ name: 'Freqtrade Trading' });\n    }\n  } else {\n    botStore.activeBot.setDetailTrade(null);\n  }\n};\n\nconst onRowSelected = () => {\n  if (botStore.activeBot.detailTradeId) {\n    const itemIndex = props.trades.findIndex(\n      (v) => v.trade_id === botStore.activeBot.detailTradeId,\n    );\n    if (itemIndex >= 0) {\n      tradesTable.value?.selectRow(itemIndex);\n    } else {\n      console.log(`Unsetting item for tradeid ${selectedItemIndex.value}`);\n      selectedItemIndex.value = undefined;\n    }\n  }\n};\n\nwatch(\n  () => botStore.activeBot.detailTradeId,\n  (val) => {\n    const index = props.trades.findIndex((v) => v.trade_id === val);\n    // Unselect when another tradeTable is selected!\n    if (index < 0) {\n      tradesTable.value?.clearSelected();\n    }\n  },\n);\n</script>\n\n<style lang=\"scss\" scoped>\n.card-body {\n  padding: 0 0.2em;\n}\n.table-sm {\n  font-size: $fontsize-small;\n}\n.btn-xs {\n  padding: 0.1rem 0.25rem;\n  font-size: 0.75rem;\n}\n</style>\n"],"names":["_sfc_main","_hoisted_3","_createElementBlock","_mergeProps","_ctx","$props","_cache","$event","_createElementVNode","_openBlock","popoverOpen","ref","forceExitHandler","item","ordertype","emit","forceExitPartialHandler","cancelOpenOrderHandler","botStore","useBotStore","form","amount","checkFormValidity","_a","model","computed","props","value","handleSubmit","payload","resetForm","_b","_d","_c","handleEntry","router","useRouter","currentPage","selectedItemIndex","filterText","feTrade","perPage","tradesTable","forceExitVisible","removeTradeVisible","confirmExitText","confirmExitValue","openFields","closedFields","formatPriceWithDecimals","price","formatPrice","rows","tableFields","key","formatPercent","feOrderType","forceExitExecuter","error","xxx","removeTradeHandler","handleContextMenuEvent","index","event","onRowClicked","onRowSelected","itemIndex","v","watch","val"],"mappings":"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"}