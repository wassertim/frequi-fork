{"version":3,"file":"Backtesting.27e9f2da.js","sources":["../../src/components/ftbot/BacktestResultView.vue","../../src/components/ftbot/BacktestResultSelect.vue","../../src/components/ftbot/BacktestHistoryLoad.vue","../../src/components/ftbot/BacktestGraphsView.vue","../../src/components/ftbot/TradeListNav.vue","../../src/components/ftbot/BacktestResultChart.vue","../../src/views/Backtesting.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid px-0 backtestresult-container\">\n    <div class=\"row d-flex justify-content-center\">\n      <h3>Backtest-result for {{ backtestResult.strategy_name }}</h3>\n    </div>\n\n    <div class=\"row text-start ms-0\">\n      <div class=\"row w-100\">\n        <div class=\"col-12 col-xl-6 px-0 px-xl-0 pe-xl-1\">\n          <b-card header=\"Strategy settings\">\n            <b-table\n              small\n              borderless\n              :items=\"backtestResultSettings\"\n              :fields=\"backtestsettingFields\"\n            >\n            </b-table>\n          </b-card>\n        </div>\n        <div class=\"col-12 col-xl-6 px-0 px-xl-0 pt-2 pt-xl-0 ps-xl-1\">\n          <b-card header=\"Metrics\">\n            <b-table small borderless :items=\"backtestResultStats\" :fields=\"backtestResultFields\">\n            </b-table>\n          </b-card>\n        </div>\n      </div>\n      <b-card header=\"Results per Exit-reason\" class=\"row mt-2 w-100\">\n        <b-table\n          small\n          hover\n          stacked=\"sm\"\n          :items=\"backtestResult.exit_reason_summary || backtestResult.sell_reason_summary\"\n          :fields=\"perExitReason\"\n        >\n        </b-table>\n      </b-card>\n      <b-card header=\"Results per pair\" class=\"row mt-2 w-100\">\n        <b-table\n          small\n          hover\n          stacked=\"sm\"\n          :items=\"backtestResult.results_per_pair\"\n          :fields=\"perPairFields\"\n        >\n        </b-table>\n      </b-card>\n\n      <b-card header=\"Single trades\" class=\"row mt-2 w-100\">\n        <TradeList\n          class=\"row trade-history mt-2 w-100\"\n          :trades=\"backtestResult.trades\"\n          :show-filter=\"true\"\n          :stake-currency=\"backtestResult.stake_currency\"\n        />\n      </b-card>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport TradeList from '@/components/ftbot/TradeList.vue';\nimport { StrategyBacktestResult, Trade } from '@/types';\n\nimport { computed } from 'vue';\nimport {\n  timestampms,\n  formatPercent,\n  formatPrice,\n  humanizeDurationFromSeconds,\n} from '@/shared/formatters';\n\nconst props = defineProps({\n  backtestResult: { required: true, type: Object as () => StrategyBacktestResult },\n});\n\nconst formatPriceStake = (price) => {\n  return `${formatPrice(price, props.backtestResult.stake_currency_decimals)} ${\n    props.backtestResult.stake_currency\n  }`;\n};\nconst getSortedTrades = (backtestResult: StrategyBacktestResult): Trade[] => {\n  const sortedTrades = backtestResult.trades\n    .slice()\n    .sort((a, b) => a.profit_ratio - b.profit_ratio);\n  return sortedTrades;\n};\n\nconst bestPair = computed((): string => {\n  const trades = getSortedTrades(props.backtestResult);\n  if (trades.length === 0) {\n    return 'N/A';\n  }\n  const value = trades[trades.length - 1];\n  return `${value.pair} ${formatPercent(value.profit_ratio, 2)}`;\n});\nconst worstPair = computed((): string => {\n  const trades = getSortedTrades(props.backtestResult);\n  if (trades.length === 0) {\n    return 'N/A';\n  }\n  const value = trades[0];\n  return `${value.pair} ${formatPercent(value.profit_ratio, 2)}`;\n});\n\nconst backtestResultStats = computed(() => {\n  // Transpose Result into readable format\n  const shortMetrics =\n    props.backtestResult?.trade_count_short && props.backtestResult?.trade_count_short > 0\n      ? [\n          { metric: '___', value: '___' },\n          {\n            metric: 'Long / Short',\n            value: `${props.backtestResult.trade_count_long} / ${props.backtestResult.trade_count_short}`,\n          },\n          {\n            metric: 'Total profit Long',\n            value: `${formatPercent(\n              props.backtestResult.profit_total_long || 0,\n            )} | ${formatPriceStake(props.backtestResult.profit_total_long_abs)}`,\n          },\n          {\n            metric: 'Total profit Short',\n            value: `${formatPercent(\n              props.backtestResult.profit_total_short || 0,\n            )} | ${formatPriceStake(props.backtestResult.profit_total_short_abs)}`,\n          },\n        ]\n      : [];\n\n  return [\n    {\n      metric: 'Total Profit',\n      value: `${formatPercent(props.backtestResult.profit_total)} | ${formatPriceStake(\n        props.backtestResult.profit_total_abs,\n      )}`,\n    },\n    {\n      metric: 'CAGR',\n      value: `${props.backtestResult.cagr ? formatPercent(props.backtestResult.cagr) : 'N/A'}`,\n    },\n    {\n      metric: 'Profit factor',\n      value: `${\n        props.backtestResult.profit_factor\n          ? formatPrice(props.backtestResult.profit_factor, 3)\n          : 'N/A'\n      }`,\n    },\n    {\n      metric: 'Total trades / Daily Avg Trades',\n      value: `${props.backtestResult.total_trades} / ${props.backtestResult.trades_per_day}`,\n    },\n    // { metric: 'First trade', value: props.backtestResult.backtest_fi },\n    // { metric: 'First trade Pair', value: props.backtestResult.backtest_best_day },\n    {\n      metric: 'Best day',\n      value: `${formatPercent(props.backtestResult.backtest_best_day, 2)} | ${formatPriceStake(\n        props.backtestResult.backtest_best_day_abs,\n      )}`,\n    },\n    {\n      metric: 'Worst day',\n      value: `${formatPercent(props.backtestResult.backtest_worst_day, 2)} | ${formatPriceStake(\n        props.backtestResult.backtest_worst_day_abs,\n      )}`,\n    },\n\n    {\n      metric: 'Win/Draw/Loss',\n      value: `${\n        props.backtestResult.results_per_pair[props.backtestResult.results_per_pair.length - 1].wins\n      } / ${\n        props.backtestResult.results_per_pair[props.backtestResult.results_per_pair.length - 1]\n          .draws\n      } / ${\n        props.backtestResult.results_per_pair[props.backtestResult.results_per_pair.length - 1]\n          .losses\n      }`,\n    },\n    {\n      metric: 'Days win/draw/loss',\n      value: `${props.backtestResult.winning_days} / ${props.backtestResult.draw_days} / ${props.backtestResult.losing_days}`,\n    },\n\n    {\n      metric: 'Avg. Duration winners',\n      value: humanizeDurationFromSeconds(props.backtestResult.winner_holding_avg_s),\n    },\n    {\n      metric: 'Avg. Duration Losers',\n      value: humanizeDurationFromSeconds(props.backtestResult.loser_holding_avg_s),\n    },\n    { metric: 'Rejected entry signals', value: props.backtestResult.rejected_signals },\n    {\n      metric: 'Entry/Exit timeouts',\n      value: `${props.backtestResult.timedout_entry_orders} / ${props.backtestResult.timedout_exit_orders}`,\n    },\n    {\n      metric: 'Canceled Trade Entries',\n      value: props.backtestResult.canceled_trade_entries ?? 'N/A',\n    },\n    {\n      metric: 'Canceled Entry Orders',\n      value: props.backtestResult.canceled_entry_orders ?? 'N/A',\n    },\n    {\n      metric: 'Replaced Entry Orders',\n      value: props.backtestResult.replaced_entry_orders ?? 'N/A',\n    },\n\n    ...shortMetrics,\n\n    { metric: '___', value: '___' },\n    { metric: 'Min balance', value: formatPriceStake(props.backtestResult.csum_min) },\n    { metric: 'Max balance', value: formatPriceStake(props.backtestResult.csum_max) },\n    { metric: 'Market change', value: formatPercent(props.backtestResult.market_change) },\n    { metric: '___', value: '___' },\n    {\n      metric: 'Max Drawdown (Account)',\n      value: formatPercent(props.backtestResult.max_drawdown_account),\n    },\n    {\n      metric: 'Max Drawdown ABS',\n      value: formatPriceStake(props.backtestResult.max_drawdown_abs),\n    },\n    {\n      metric: 'Drawdown high | low',\n      value: `${formatPriceStake(props.backtestResult.max_drawdown_high)} | ${formatPriceStake(\n        props.backtestResult.max_drawdown_low,\n      )}`,\n    },\n    { metric: 'Drawdown start', value: timestampms(props.backtestResult.drawdown_start_ts) },\n    { metric: 'Drawdown end', value: timestampms(props.backtestResult.drawdown_end_ts) },\n    { metric: '___', value: '___' },\n\n    {\n      metric: 'Best Pair',\n      value: `${props.backtestResult.best_pair.key} ${formatPercent(\n        props.backtestResult.best_pair.profit_sum,\n      )}`,\n    },\n    {\n      metric: 'Worst Pair',\n      value: `${props.backtestResult.worst_pair.key} ${formatPercent(\n        props.backtestResult.worst_pair.profit_sum,\n      )}`,\n    },\n    { metric: 'Best single Trade', value: bestPair.value },\n    { metric: 'Worst single Trade', value: worstPair.value },\n  ];\n});\n\nconst backtestResultSettings = computed(() => {\n  // Transpose Result into readable format\n  return [\n    { setting: 'Backtesting from', value: timestampms(props.backtestResult.backtest_start_ts) },\n    { setting: 'Backtesting to', value: timestampms(props.backtestResult.backtest_end_ts) },\n    {\n      setting: 'BT execution time',\n      value: humanizeDurationFromSeconds(\n        props.backtestResult.backtest_run_end_ts - props.backtestResult.backtest_run_start_ts,\n      ),\n    },\n    { setting: 'Max open trades', value: props.backtestResult.max_open_trades },\n    { setting: 'Timeframe', value: props.backtestResult.timeframe },\n    { setting: 'Timeframe Detail', value: props.backtestResult.timeframe_detail || 'N/A' },\n    { setting: 'Timerange', value: props.backtestResult.timerange },\n    { setting: 'Stoploss', value: formatPercent(props.backtestResult.stoploss, 2) },\n    { setting: 'Trailing Stoploss', value: props.backtestResult.trailing_stop },\n    {\n      setting: 'Trail only when offset is reached',\n      value: props.backtestResult.trailing_only_offset_is_reached,\n    },\n    { setting: 'Trailing Stop positive', value: props.backtestResult.trailing_stop_positive },\n    {\n      setting: 'Trailing stop positive offset',\n      value: props.backtestResult.trailing_stop_positive_offset,\n    },\n    { setting: 'Custom Stoploss', value: props.backtestResult.use_custom_stoploss },\n    { setting: 'ROI', value: props.backtestResult.minimal_roi },\n    {\n      setting: 'Use Exit Signal',\n      value:\n        props.backtestResult.use_exit_signal !== undefined\n          ? props.backtestResult.use_exit_signal\n          : props.backtestResult.use_sell_signal,\n    },\n    {\n      setting: 'Exit profit only',\n      value:\n        props.backtestResult.exit_profit_only !== undefined\n          ? props.backtestResult.exit_profit_only\n          : props.backtestResult.sell_profit_only,\n    },\n    {\n      setting: 'Exit profit offset',\n      value:\n        props.backtestResult.exit_profit_offset !== undefined\n          ? props.backtestResult.exit_profit_offset\n          : props.backtestResult.sell_profit_offset,\n    },\n    { setting: 'Enable protections', value: props.backtestResult.enable_protections },\n    {\n      setting: 'Starting balance',\n      value: formatPriceStake(props.backtestResult.starting_balance),\n    },\n    {\n      setting: 'Final balance',\n      value: formatPriceStake(props.backtestResult.final_balance),\n    },\n    {\n      setting: 'Avg. stake amount',\n      value: formatPriceStake(props.backtestResult.avg_stake_amount),\n    },\n    {\n      setting: 'Total trade volume',\n      value: formatPriceStake(props.backtestResult.total_volume),\n    },\n  ];\n});\nconst perPairFields = computed(() => {\n  return [\n    { key: 'key', label: 'Pair' },\n    { key: 'trades', label: 'Buys' },\n    {\n      key: 'profit_mean',\n      label: 'Avg Profit %',\n      formatter: (value) => formatPercent(value, 2),\n    },\n    { key: 'profit_sum', label: 'Cum Profit %', formatter: (value) => formatPercent(value, 2) },\n    {\n      key: 'profit_total_abs',\n      label: `Tot Profit ${props.backtestResult.stake_currency}`,\n      formatter: (value) => formatPrice(value, props.backtestResult.stake_currency_decimals),\n    },\n    {\n      key: 'profit_total',\n      label: 'Tot Profit %',\n      formatter: (value) => formatPercent(value, 2),\n    },\n    { key: 'duration_avg', label: 'Avg Duration' },\n    { key: 'wins', label: 'Wins' },\n    { key: 'draws', label: 'Draws' },\n    { key: 'losses', label: 'Losses' },\n  ];\n});\n\nconst perExitReason = computed(() => {\n  return [\n    { key: 'exit_reason', label: 'Exit Reason' },\n    { key: 'trades', label: 'Buys' },\n    {\n      key: 'profit_mean',\n      label: 'Avg Profit %',\n      formatter: (value) => formatPercent(value, 2),\n    },\n    { key: 'profit_sum', label: 'Cum Profit %', formatter: (value) => formatPercent(value, 2) },\n    {\n      key: 'profit_total_abs',\n      label: `Tot Profit ${props.backtestResult.stake_currency}`,\n\n      formatter: (value) => formatPrice(value, props.backtestResult.stake_currency_decimals),\n    },\n    {\n      key: 'profit_total',\n      label: 'Tot Profit %',\n      formatter: (value) => formatPercent(value, 2),\n    },\n    { key: 'wins', label: 'Wins' },\n    { key: 'draws', label: 'Draws' },\n    { key: 'losses', label: 'Losses' },\n  ];\n});\nconst backtestResultFields: Array<Record<string, string>> = [\n  { key: 'metric', label: 'Metric' },\n  { key: 'value', label: 'Value' },\n];\n\nconst backtestsettingFields: Array<Record<string, string>> = [\n  { key: 'setting', label: 'Setting' },\n  { key: 'value', label: 'Value' },\n];\n</script>\n\n<style lang=\"scss\" scoped>\n.backtestresult-container {\n  @media (min-width: 1200px) {\n    max-width: 1200px;\n  }\n}\n</style>\n","<template>\n  <div class=\"container d-flex flex-column align-items-center\">\n    <h3>Available results:</h3>\n    <b-list-group class=\"ms-2\">\n      <b-list-group-item\n        v-for=\"[key, strat] in Object.entries(backtestHistory)\"\n        :key=\"key\"\n        button\n        :active=\"key === selectedBacktestResultKey\"\n        class=\"d-flex justify-content-between align-items-center py-1\"\n        @click=\"setBacktestResult(key)\"\n      >\n        {{ key }} {{ strat.total_trades }} {{ formatPercent(strat.profit_total) }}\n      </b-list-group-item>\n    </b-list-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { formatPercent } from '@/shared/formatters';\nimport { StrategyBacktestResult } from '@/types';\n\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'BacktestResultSelect',\n  props: {\n    backtestHistory: {\n      required: true,\n      type: Object as () => Record<string, StrategyBacktestResult>,\n    },\n    selectedBacktestResultKey: { required: false, default: '', type: String },\n  },\n  emits: ['selectionChange'],\n  setup(_, { emit }) {\n    const setBacktestResult = (key) => {\n      emit('selectionChange', key);\n    };\n    return {\n      formatPercent,\n      setBacktestResult,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <div>\n    <button\n      class=\"btn btn-secondary float-end\"\n      title=\"Refresh\"\n      aria-label=\"Refresh\"\n      @click=\"botStore.activeBot.getBacktestHistory\"\n    >\n      &#x21bb;\n    </button>\n    <p>\n      Load Historic results from disk. You can click on multiple results to load all of them into\n      freqUI.\n    </p>\n    <b-list-group v-if=\"botStore.activeBot.backtestHistoryList\" class=\"ms-2\">\n      <b-list-group-item\n        v-for=\"(res, idx) in botStore.activeBot.backtestHistoryList\"\n        :key=\"idx\"\n        class=\"d-flex justify-content-between align-items-center py-1 mb-1\"\n        button\n        @click=\"botStore.activeBot.getBacktestHistoryResult(res)\"\n      >\n        <strong>{{ res.strategy }}</strong>\n        backtested on: {{ timestampms(res.backtest_start_time * 1000) }}\n        <small>{{ res.filename }}</small>\n      </b-list-group-item>\n    </b-list-group>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted } from 'vue';\nimport { timestampms } from '@/shared/formatters';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nexport default defineComponent({\n  setup() {\n    const botStore = useBotStore();\n\n    onMounted(() => {\n      botStore.activeBot.getBacktestHistory();\n    });\n\n    return {\n      timestampms,\n      botStore,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\">\nimport { ClosedTrade } from '@/types';\nimport { defineComponent } from 'vue';\nimport ProfitDistributionChart from '@/components/charts/ProfitDistributionChart.vue';\nimport CumProfitChart from '@/components/charts/CumProfitChart.vue';\nimport TradesLogChart from '@/components/charts/TradesLog.vue';\n\nexport default defineComponent({\n  name: 'BacktestGraphsView',\n  components: {\n    ProfitDistributionChart,\n    CumProfitChart,\n    TradesLogChart,\n  },\n  props: {\n    trades: { required: true, type: Array as () => ClosedTrade[] },\n  },\n  setup() {\n    return {};\n  },\n});\n</script>\n<template>\n  <div class=\"text-center flex-fill mt-2 d-flex flex-column\">\n    <TradesLogChart :trades=\"trades\" class=\"trades-log\" />\n    <CumProfitChart\n      :trades=\"trades\"\n      profit-column=\"profit_abs\"\n      class=\"cum-profit\"\n      :show-title=\"true\"\n    />\n    <hr />\n    <ProfitDistributionChart class=\"mt-3\" :trades=\"trades\" :show-title=\"true\" />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.trades-log {\n  height: 350px !important;\n  max-height: 350px;\n}\n.cum-profit {\n  height: 350px !important;\n  max-height: 350px;\n}\n</style>\n","<template>\n  <div>\n    <span>Trade Navigation</span>\n    <b-list-group>\n      <b-list-group-item\n        v-for=\"trade in sortedTrades\"\n        :key=\"trade.open_timestamp\"\n        button\n        class=\"d-flex flex-wrap justify-content-between align-items-center py-1\"\n        :title=\"`${trade.pair}`\"\n        :active=\"trade.open_timestamp === selectedTrade.open_timestamp\"\n        @click=\"onTradeSelect(trade)\"\n      >\n        <div>\n          <span v-if=\"botStore.activeBot.botState.trading_mode !== 'spot'\">{{\n            trade.is_short ? 'S-' : 'L-'\n          }}</span>\n          <DateTimeTZ :date=\"trade.open_timestamp\" />\n        </div>\n        <TradeProfit :trade=\"trade\" />\n        <ProfitPill\n          v-if=\"backtestMode\"\n          :profit-ratio=\"trade.profit_ratio\"\n          :stake-currency=\"botStore.activeBot.stakeCurrency\"\n        />\n      </b-list-group-item>\n      <b-list-group-item v-if=\"trades.length === 0\">No trades to show...</b-list-group-item>\n    </b-list-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Trade } from '@/types';\nimport TradeProfit from '@/components/ftbot/TradeProfit.vue';\nimport ProfitPill from '@/components/general/ProfitPill.vue';\nimport { defineComponent, computed, ref } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport DateTimeTZ from '@/components/general/DateTimeTZ.vue';\n\nexport default defineComponent({\n  name: 'TradeListNav',\n  components: { TradeProfit, ProfitPill, DateTimeTZ },\n  props: {\n    trades: { required: true, type: Array as () => Trade[] },\n    backtestMode: { required: false, default: false, type: Boolean },\n  },\n  emits: ['trade-select'],\n\n  setup(props, { emit }) {\n    const botStore = useBotStore();\n    const selectedTrade = ref({} as Trade);\n\n    const onTradeSelect = (trade: Trade) => {\n      selectedTrade.value = trade;\n      emit('trade-select', trade);\n    };\n\n    const sortedTrades = computed(() => {\n      return props.trades.slice().sort((a, b) => b.open_timestamp - a.open_timestamp);\n    });\n\n    return {\n      botStore,\n      selectedTrade,\n      sortedTrades,\n      onTradeSelect,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.list-group {\n  text-align: left;\n}\n</style>\n","<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-11 text-start\">\n        <p>\n          Graph will always show the latest values for the selected strategy. Timerange:\n          {{ timerange }} - {{ strategy }}\n        </p>\n      </div>\n      <div class=\"col-md-1 text-end\">\n        <b-button\n          aria-label=\"Close\"\n          title=\"Trade Navigation\"\n          size=\"sm\"\n          @click=\"showRightBar = !showRightBar\"\n          >{{ showRightBar ? '&gt;' : '&lt;' }}\n        </b-button>\n      </div>\n    </div>\n    <div class=\"row text-center h-100 d-flex align-items-stretch\">\n      <PairSummary\n        class=\"col-md-2 overflow-auto\"\n        style=\"max-height: calc(100vh - 200px)\"\n        :pairlist=\"pairlist\"\n        :trades=\"trades\"\n        sort-method=\"profit\"\n        :backtest-mode=\"true\"\n      />\n      <CandleChartContainer\n        :available-pairs=\"pairlist\"\n        :historic-view=\"!!true\"\n        :timeframe=\"timeframe\"\n        :timerange=\"timerange\"\n        :strategy=\"strategy\"\n        :trades=\"trades\"\n        :class=\"`${\n          showRightBar ? 'col-md-8' : 'col-md-10'\n        } candle-chart-container px-0 h-100 align-self-stretch`\"\n        :slider-position=\"sliderPosition\"\n      >\n      </CandleChartContainer>\n      <TradeListNav\n        v-if=\"showRightBar\"\n        class=\"overflow-auto col-md-2\"\n        style=\"max-height: calc(100vh - 200px)\"\n        :trades=\"trades.filter((t) => t.pair === botStore.activeBot.selectedPair)\"\n        @trade-select=\"navigateChartToTrade\"\n      />\n    </div>\n    <b-card header=\"Single trades\" class=\"row mt-2 w-100\">\n      <TradeList class=\"row trade-history mt-2 w-100\" :trades=\"trades\" :show-filter=\"true\" />\n    </b-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport TradeList from '@/components/ftbot/TradeList.vue';\nimport TradeListNav from '@/components/ftbot/TradeListNav.vue';\nimport PairSummary from '@/components/ftbot/PairSummary.vue';\nimport CandleChartContainer from '@/components/charts/CandleChartContainer.vue';\nimport { defineComponent, ref } from 'vue';\nimport { ChartSliderPosition, Trade } from '@/types';\n\nexport default defineComponent({\n  name: 'BacktestResultChart',\n  components: {\n    CandleChartContainer,\n    PairSummary,\n    TradeList,\n    TradeListNav,\n  },\n  props: {\n    timeframe: { required: true, type: String },\n    strategy: { required: true, type: String },\n    timerange: { required: true, type: String },\n    pairlist: { required: true, type: Array as () => string[] },\n    trades: { required: true, type: Array as () => Trade[] },\n  },\n  setup() {\n    const botStore = useBotStore();\n    const showRightBar = ref(true);\n    const sliderPosition = ref<ChartSliderPosition>();\n\n    const navigateChartToTrade = (trade: Trade) => {\n      sliderPosition.value = {\n        startValue: trade.open_timestamp,\n        endValue: trade.close_timestamp,\n      };\n    };\n\n    return { botStore, showRightBar, navigateChartToTrade, sliderPosition };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.candle-chart-container {\n  // TODO: Rough estimate - still to fix correctly\n  // Applies to all \"calc\" usages in this file.\n  height: calc(100vh - 250px) !important;\n}\n</style>\n","<template>\n  <div class=\"container-fluid\" style=\"max-height: calc(100vh - 60px)\">\n    <div class=\"container-fluid\">\n      <div class=\"row mb-2\"></div>\n      <p v-if=\"!botStore.activeBot.canRunBacktest\">\n        Bot must be in webserver mode to enable Backtesting.\n      </p>\n      <div class=\"row w-100\">\n        <h2 class=\"col-4 col-lg-3\">Backtesting</h2>\n        <div\n          class=\"col-12 col-lg-order-last col-lg-6 mx-md-5 d-flex flex-wrap justify-content-md-center justify-content-between mb-4\"\n        >\n          <b-form-radio\n            v-if=\"botStore.activeBot.botApiVersion >= 2.15\"\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"historicResults\"\n            :disabled=\"!botStore.activeBot.canRunBacktest\"\n            >Load Results</b-form-radio\n          >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"run\"\n            :disabled=\"!botStore.activeBot.canRunBacktest\"\n            >Run backtest</b-form-radio\n          >\n          <b-form-radio\n            id=\"bt-analyze-btn\"\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"results\"\n            :disabled=\"!hasBacktestResult\"\n            >Analyze result</b-form-radio\n          >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"visualize-summary\"\n            :disabled=\"!hasBacktestResult\"\n            >Visualize summary</b-form-radio\n          >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"visualize\"\n            :disabled=\"!hasBacktestResult\"\n            >Visualize result</b-form-radio\n          >\n        </div>\n        <small\n          v-show=\"botStore.activeBot.backtestRunning\"\n          class=\"text-end bt-running-label col-8 col-lg-3\"\n          >Backtest running: {{ botStore.activeBot.backtestStep }}\n          {{ formatPercent(botStore.activeBot.backtestProgress, 2) }}</small\n        >\n      </div>\n    </div>\n\n    <div class=\"d-md-flex\">\n      <!-- Left bar -->\n      <div\n        :class=\"`${showLeftBar ? 'col-md-3' : ''} sticky-top sticky-offset me-3 d-flex flex-column`\"\n      >\n        <b-button\n          v-if=\"btFormMode !== 'visualize'\"\n          class=\"align-self-start\"\n          aria-label=\"Close\"\n          size=\"sm\"\n          @click=\"showLeftBar = !showLeftBar\"\n          >{{ showLeftBar ? '&lt;' : '&gt;' }}</b-button\n        >\n        <transition name=\"fade\" mode=\"in-out\">\n          <BacktestResultSelect\n            v-if=\"btFormMode !== 'visualize' && showLeftBar\"\n            :backtest-history=\"botStore.activeBot.backtestHistory\"\n            :selected-backtest-result-key=\"botStore.activeBot.selectedBacktestResultKey\"\n            @selectionChange=\"botStore.activeBot.setBacktestResultKey\"\n          />\n        </transition>\n      </div>\n      <!-- End Left bar -->\n      <div\n        v-if=\"btFormMode == 'historicResults'\"\n        class=\"flex-fill row d-flex flex-column bt-config\"\n      >\n        <backtest-history-load />\n      </div>\n      <div v-if=\"btFormMode == 'run'\" class=\"flex-fill row d-flex flex-column bt-config\">\n        <div class=\"mb-2\">\n          <span>Strategy</span>\n          <StrategySelect v-model=\"strategy\"></StrategySelect>\n        </div>\n        <b-card bg-variant=\"light\" :disabled=\"botStore.activeBot.backtestRunning\">\n          <!-- Backtesting parameters -->\n          <b-form-group\n            label-cols-lg=\"2\"\n            label=\"Backtest params\"\n            label-size=\"sm\"\n            label-class=\"fw-bold pt-0\"\n            class=\"mb-0\"\n          >\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Timeframe:\"\n              label-align-sm=\"right\"\n              label-for=\"timeframe-select\"\n            >\n              <TimeframeSelect id=\"timeframe-select\" v-model=\"selectedTimeframe\" />\n            </b-form-group>\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Detail Timeframe:\"\n              label-align-sm=\"right\"\n              label-for=\"timeframe-detail-select\"\n              title=\"Detail timeframe, to simulate intra-candle results. Not setting this will not use this functionality.\"\n            >\n              <TimeframeSelect\n                id=\"timeframe-detail-select\"\n                v-model=\"selectedDetailTimeframe\"\n                :below-timeframe=\"selectedTimeframe\"\n              />\n            </b-form-group>\n\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Max open trades:\"\n              label-align-sm=\"right\"\n              label-for=\"max-open-trades\"\n            >\n              <b-form-input\n                id=\"max-open-trades\"\n                v-model=\"maxOpenTrades\"\n                placeholder=\"Use strategy default\"\n                type=\"number\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Starting capital:\"\n              label-align-sm=\"right\"\n              label-for=\"starting-capital\"\n            >\n              <b-form-input\n                id=\"starting-capital\"\n                v-model=\"startingCapital\"\n                type=\"number\"\n                step=\"0.001\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Stake amount:\"\n              label-align-sm=\"right\"\n              label-for=\"stake-amount\"\n            >\n              <div class=\"d-flex\">\n                <b-form-checkbox\n                  id=\"stake-amount-bool\"\n                  v-model=\"stakeAmountUnlimited\"\n                  class=\"col-md-6\"\n                  >Unlimited stake</b-form-checkbox\n                >\n\n                <b-form-input\n                  id=\"stake-amount\"\n                  v-model=\"stakeAmount\"\n                  type=\"number\"\n                  placeholder=\"Use strategy default\"\n                  step=\"0.01\"\n                  :disabled=\"stakeAmountUnlimited\"\n                ></b-form-input>\n              </div>\n            </b-form-group>\n\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Enable Protections:\"\n              label-align-sm=\"right\"\n              label-for=\"enable-protections\"\n            >\n              <b-form-checkbox\n                id=\"enable-protections\"\n                v-model=\"enableProtections\"\n              ></b-form-checkbox>\n            </b-form-group>\n\n            <!-- <b-form-group label-cols-sm=\"5\" label=\"Fee:\" label-align-sm=\"right\" label-for=\"fee\">\n              <b-form-input\n                id=\"fee\"\n                type=\"number\"\n                placeholder=\"Use exchange default\"\n                step=\"0.01\"\n              ></b-form-input>\n            </b-form-group> -->\n            <hr />\n            <TimeRangeSelect v-model=\"timerange\" class=\"mt-2\"></TimeRangeSelect>\n          </b-form-group>\n        </b-card>\n\n        <h3 class=\"mt-3\">Backtesting summary</h3>\n        <div\n          class=\"d-flex flex-wrap flex-md-nowrap justify-content-between justify-content-md-center\"\n        >\n          <b-button\n            id=\"start-backtest\"\n            variant=\"primary\"\n            :disabled=\"botStore.activeBot.backtestRunning || !botStore.activeBot.canRunBacktest\"\n            class=\"mx-1\"\n            @click=\"clickBacktest\"\n          >\n            Start backtest\n          </b-button>\n          <b-button\n            variant=\"primary\"\n            :disabled=\"botStore.activeBot.backtestRunning || !botStore.activeBot.canRunBacktest\"\n            class=\"mx-1\"\n            @click=\"botStore.activeBot.pollBacktest\"\n          >\n            Load backtest result\n          </b-button>\n          <b-button\n            variant=\"primary\"\n            class=\"mx-1\"\n            :disabled=\"!botStore.activeBot.backtestRunning\"\n            @click=\"botStore.activeBot.stopBacktest\"\n            >Stop Backtest</b-button\n          >\n          <b-button\n            variant=\"primary\"\n            class=\"mx-1\"\n            :disabled=\"botStore.activeBot.backtestRunning || !botStore.activeBot.canRunBacktest\"\n            @click=\"botStore.activeBot.removeBacktest\"\n            >Reset Backtest</b-button\n          >\n        </div>\n      </div>\n      <BacktestResultView\n        v-if=\"hasBacktestResult && btFormMode == 'results'\"\n        :backtest-result=\"botStore.activeBot.selectedBacktestResult\"\n        class=\"flex-fill\"\n      />\n\n      <BacktestGraphsView\n        v-if=\"hasBacktestResult && btFormMode == 'visualize-summary'\"\n        :trades=\"botStore.activeBot.selectedBacktestResult.trades\"\n      />\n    </div>\n\n    <div\n      v-if=\"hasBacktestResult && btFormMode == 'visualize'\"\n      class=\"container-fluid text-center w-100 mt-2\"\n    >\n      <BacktestResultChart\n        :timeframe=\"timeframe\"\n        :strategy=\"strategy\"\n        :timerange=\"timerange\"\n        :pairlist=\"botStore.activeBot.selectedBacktestResult.pairlist\"\n        :trades=\"botStore.activeBot.selectedBacktestResult.trades\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport TimeRangeSelect from '@/components/ftbot/TimeRangeSelect.vue';\nimport BacktestResultView from '@/components/ftbot/BacktestResultView.vue';\nimport BacktestResultSelect from '@/components/ftbot/BacktestResultSelect.vue';\nimport StrategySelect from '@/components/ftbot/StrategySelect.vue';\nimport TimeframeSelect from '@/components/ftbot/TimeframeSelect.vue';\nimport BacktestHistoryLoad from '@/components/ftbot/BacktestHistoryLoad.vue';\nimport BacktestGraphsView from '@/components/ftbot/BacktestGraphsView.vue';\nimport BacktestResultChart from '@/components/ftbot/BacktestResultChart.vue';\n\nimport { BacktestPayload } from '@/types';\n\nimport { formatPercent } from '@/shared/formatters';\nimport { defineComponent, computed, ref, onMounted, watch } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nexport default defineComponent({\n  name: 'Backtesting',\n  components: {\n    BacktestResultView,\n    BacktestGraphsView,\n    BacktestResultSelect,\n    BacktestHistoryLoad,\n    TimeRangeSelect,\n    StrategySelect,\n    TimeframeSelect,\n    BacktestResultChart,\n  },\n  setup() {\n    const botStore = useBotStore();\n\n    const hasBacktestResult = computed(() =>\n      botStore.activeBot.backtestHistory\n        ? Object.keys(botStore.activeBot.backtestHistory).length !== 0\n        : false,\n    );\n    const timeframe = computed((): string => {\n      try {\n        return botStore.activeBot.selectedBacktestResult.timeframe;\n      } catch (err) {\n        return '';\n      }\n    });\n\n    const strategy = ref('');\n    const selectedTimeframe = ref('');\n    const selectedDetailTimeframe = ref('');\n    const timerange = ref('');\n    const showLeftBar = ref(false);\n    const enableProtections = ref(false);\n    const stakeAmountUnlimited = ref(false);\n    const maxOpenTrades = ref('');\n    const stakeAmount = ref('');\n    const startingCapital = ref('');\n    const btFormMode = ref('run');\n    const pollInterval = ref<number | null>(null);\n\n    const selectBacktestResult = () => {\n      // Set parameters for this result\n      strategy.value = botStore.activeBot.selectedBacktestResult.strategy_name;\n      selectedTimeframe.value = botStore.activeBot.selectedBacktestResult.timeframe;\n      selectedDetailTimeframe.value =\n        botStore.activeBot.selectedBacktestResult.timeframe_detail || '';\n      timerange.value = botStore.activeBot.selectedBacktestResult.timerange;\n    };\n\n    watch(\n      () => botStore.activeBot.selectedBacktestResultKey,\n      () => {\n        selectBacktestResult();\n      },\n    );\n\n    const clickBacktest = () => {\n      const btPayload: BacktestPayload = {\n        strategy: strategy.value,\n        timerange: timerange.value,\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        enable_protections: enableProtections.value,\n      };\n      const openTradesInt = parseInt(maxOpenTrades.value, 10);\n      if (openTradesInt) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        btPayload.max_open_trades = openTradesInt;\n      }\n      if (stakeAmountUnlimited.value) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        btPayload.stake_amount = 'unlimited';\n      } else {\n        const stakeAmountLoc = Number(stakeAmount.value);\n        if (stakeAmountLoc) {\n          // eslint-disable-next-line @typescript-eslint/camelcase\n          btPayload.stake_amount = stakeAmountLoc.toString();\n        }\n      }\n\n      const startingCapitalLoc = Number(startingCapital.value);\n      if (startingCapitalLoc) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        btPayload.dry_run_wallet = startingCapitalLoc;\n      }\n\n      if (selectedTimeframe.value) {\n        btPayload.timeframe = selectedTimeframe.value;\n      }\n      if (selectedDetailTimeframe.value) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        btPayload.timeframe_detail = selectedDetailTimeframe.value;\n      }\n\n      botStore.activeBot.startBacktest(btPayload);\n    };\n\n    onMounted(() => botStore.activeBot.getState());\n    watch(\n      () => botStore.activeBot.backtestRunning,\n      () => {\n        if (botStore.activeBot.backtestRunning === true) {\n          pollInterval.value = window.setInterval(botStore.activeBot.pollBacktest, 1000);\n        } else if (pollInterval.value) {\n          clearInterval(pollInterval.value);\n          pollInterval.value = null;\n        }\n      },\n    );\n    return {\n      botStore,\n\n      formatPercent,\n      hasBacktestResult,\n      timeframe,\n      strategy,\n      selectedTimeframe,\n      selectedDetailTimeframe,\n      timerange,\n      enableProtections,\n      showLeftBar,\n      stakeAmountUnlimited,\n      maxOpenTrades,\n      stakeAmount,\n      startingCapital,\n      btFormMode,\n      clickBacktest,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.bt-running-label {\n  position: absolute;\n  right: 2em;\n  margin-top: 1em;\n}\n\n.sticky-offset {\n  top: 2em;\n}\n.flex-samesize-items {\n  flex: 1 1 0;\n  @media md {\n    flex: unset;\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.2s;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.bt-config {\n  @media (min-width: 992px) {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 75vw;\n  }\n}\n</style>\n"],"names":["formatPriceStake","price","formatPrice","props","getSortedTrades","backtestResult","a","b","bestPair","computed","trades","value","formatPercent","worstPair","backtestResultStats","shortMetrics","_a","_b","humanizeDurationFromSeconds","_c","_d","_e","timestampms","backtestResultSettings","perPairFields","perExitReason","backtestResultFields","backtestsettingFields","_sfc_main","defineComponent","_","emit","key","_hoisted_1","_hoisted_2","_createElementVNode","_openBlock","_createElementBlock","_createVNode","_component_b_list_group","_withCtx","_Fragment","_renderList","_ctx","strat","_createBlock","_component_b_list_group_item","$event","_createTextVNode","_toDisplayString","botStore","useBotStore","onMounted","_cache","args","res","idx","ProfitDistributionChart","CumProfitChart","TradesLogChart","_component_TradesLogChart","_component_CumProfitChart","_component_ProfitDistributionChart","TradeProfit","ProfitPill","DateTimeTZ","selectedTrade","ref","onTradeSelect","trade","sortedTrades","_withScopeId","_createCommentVNode","_component_DateTimeTZ","_component_TradeProfit","_component_ProfitPill","CandleChartContainer","PairSummary","TradeList","TradeListNav","showRightBar","sliderPosition","_hoisted_3","_hoisted_4","_component_b_button","_component_PairSummary","_component_CandleChartContainer","_normalizeClass","_component_TradeListNav","t","_component_b_card","_component_TradeList","BacktestResultView","BacktestGraphsView","BacktestResultSelect","BacktestHistoryLoad","TimeRangeSelect","StrategySelect","TimeframeSelect","BacktestResultChart","hasBacktestResult","timeframe","strategy","selectedTimeframe","selectedDetailTimeframe","timerange","showLeftBar","enableProtections","stakeAmountUnlimited","maxOpenTrades","stakeAmount","startingCapital","btFormMode","pollInterval","selectBacktestResult","watch","clickBacktest","btPayload","openTradesInt","stakeAmountLoc","startingCapitalLoc","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_15","_hoisted_16","_component_b_form_radio","_withDirectives","_vShow","_Transition","_component_BacktestResultSelect","_hoisted_9","_component_backtest_history_load","_hoisted_10","_component_StrategySelect","_component_b_form_group","_component_TimeframeSelect","_component_b_form_input","_component_b_form_checkbox","_hoisted_14","_component_TimeRangeSelect","_component_BacktestResultView","_component_BacktestGraphsView","_hoisted_17","_component_BacktestResultChart"],"mappings":"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"}