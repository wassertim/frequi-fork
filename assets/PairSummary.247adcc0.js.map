{"version":3,"file":"PairSummary.247adcc0.js","sources":["../../src/components/ftbot/PairSummary.vue"],"sourcesContent":["<template>\n  <!-- <b-table class=\"table-sm\" :items=\"combinedPairList\" :fields=\"tableFields\"> </b-table> -->\n\n  <b-list-group>\n    <b-list-group-item\n      v-for=\"comb in combinedPairList\"\n      :key=\"comb.pair\"\n      button\n      class=\"d-flex justify-content-between align-items-center py-1\"\n      :active=\"comb.pair === botStore.activeBot.selectedPair\"\n      :title=\"`${comb.pair} - ${comb.tradeCount} trades`\"\n      @click=\"botStore.activeBot.selectedPair = comb.pair\"\n    >\n      <div>\n        {{ comb.pair }}\n        <span v-if=\"comb.locks\" :title=\"comb.lockReason\"> &#128274; </span>\n      </div>\n\n      <TradeProfit v-if=\"comb.trade && !backtestMode\" :trade=\"comb.trade\" />\n      <ProfitPill\n        v-if=\"backtestMode && comb.tradeCount > 0\"\n        :profit-ratio=\"comb.profit\"\n        :profit-abs=\"comb.profitAbs\"\n        :stake-currency=\"botStore.activeBot.stakeCurrency\"\n      />\n    </b-list-group-item>\n  </b-list-group>\n</template>\n\n<script lang=\"ts\">\nimport { formatPercent, timestampms } from '@/shared/formatters';\nimport { Lock, Trade } from '@/types';\nimport TradeProfit from '@/components/ftbot/TradeProfit.vue';\nimport ProfitPill from '@/components/general/ProfitPill.vue';\nimport { defineComponent, computed } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\ninterface CombinedPairList {\n  pair: string;\n  lockReason: string;\n  profitString: string;\n  trade?: Trade;\n  locks?: Lock;\n  profit: number;\n  profitAbs: number;\n  tradeCount: number;\n}\n\nexport default defineComponent({\n  name: 'PairSummary',\n  components: { TradeProfit, ProfitPill },\n  props: {\n    // TOOD: Should be string list\n    pairlist: { required: true, type: Array as () => string[] },\n    currentLocks: { required: false, type: Array as () => Lock[], default: () => [] },\n    trades: { required: true, type: Array as () => Trade[] },\n    sortMethod: { default: 'normal', type: String },\n    backtestMode: { required: false, default: false, type: Boolean },\n  },\n  setup(props) {\n    const botStore = useBotStore();\n    const combinedPairList = computed(() => {\n      const comb: CombinedPairList[] = [];\n\n      props.pairlist.forEach((pair) => {\n        const trades: Trade[] = props.trades.filter((el) => el.pair === pair);\n        const allLocks = props.currentLocks.filter((el) => el.pair === pair);\n        let lockReason = '';\n        let locks;\n\n        // Sort to have longer timeframe in front\n        allLocks.sort((a, b) => (a.lock_end_timestamp > b.lock_end_timestamp ? -1 : 1));\n        if (allLocks.length > 0) {\n          [locks] = allLocks;\n          lockReason = `${timestampms(locks.lock_end_timestamp)} - ${locks.reason}`;\n        }\n        let profitString = '';\n        let profit = 0;\n        let profitAbs = 0;\n        trades.forEach((trade) => {\n          profit += trade.profit_ratio;\n          profitAbs += trade.profit_abs ?? 0;\n        });\n        const tradeCount = trades.length;\n        const trade = tradeCount ? trades[0] : undefined;\n        if (trades.length > 0) {\n          profitString = `Current profit: ${formatPercent(profit)}`;\n        }\n        if (trade) {\n          profitString += `\\nOpen since: ${timestampms(trade.open_timestamp)}`;\n        }\n        comb.push({ pair, trade, locks, lockReason, profitString, profit, profitAbs, tradeCount });\n      });\n      if (props.sortMethod === 'profit') {\n        comb.sort((a, b) => {\n          if (a.profit > b.profit) {\n            return -1;\n          }\n          return 1;\n        });\n      } else {\n        // sort Pairs: \"with open trade\" -> available -> locked\n        comb.sort((a, b) => {\n          if (a.trade && !b.trade) {\n            return -1;\n          }\n          if (a.trade && b.trade) {\n            // 2 open trade pairs\n            return a.trade.trade_id > b.trade.trade_id ? 1 : -1;\n          }\n          if (!a.locks && b.locks) {\n            return -1;\n          }\n          if (a.locks && b.locks) {\n            // Both have locks\n            return a.locks.lock_end_timestamp > b.locks.lock_end_timestamp ? 1 : -1;\n          }\n          return 1;\n        });\n      }\n      return comb;\n    });\n    const tableFields = computed(() => {\n      return [\n        { key: 'pair', label: 'Pair' },\n        {\n          key: 'locks.lock_end_timestamp',\n          label: 'Lock',\n          formatter: (value) => (value ? `${timestampms(value)}` : ''),\n        },\n        {\n          key: 'trade.current_profit',\n          label: 'Position',\n          formatter: (value) => formatPercent(value, 3),\n        },\n      ];\n    });\n    return {\n      combinedPairList,\n      tableFields,\n      botStore,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.list-group {\n  text-align: left;\n}\n</style>\n"],"names":["_sfc_main","defineComponent","TradeProfit","ProfitPill","props","botStore","useBotStore","combinedPairList","computed","comb","pair","trades","el","allLocks","lockReason","locks","a","b","timestampms","profitString","profit","profitAbs","trade","tradeCount","formatPercent","tableFields","value","_createBlock","_component_b_list_group","_withCtx","_openBlock","_createElementBlock","_Fragment","_renderList","_ctx","_component_b_list_group_item","$event","_createElementVNode","_createTextVNode","_toDisplayString","_hoisted_1","_createCommentVNode","_component_TradeProfit","_component_ProfitPill"],"mappings":"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"}