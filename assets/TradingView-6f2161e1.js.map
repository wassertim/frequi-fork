{"version":3,"file":"TradingView-6f2161e1.js","sources":["../../node_modules/vue-material-design-icons/Play.vue","../../node_modules/vue-material-design-icons/Stop.vue","../../node_modules/vue-material-design-icons/Pause.vue","../../node_modules/vue-material-design-icons/Reload.vue","../../node_modules/vue-material-design-icons/PlusBoxMultipleOutline.vue","../../src/components/ftbot/ForceEntryForm.vue","../../src/components/general/MessageBox.vue","../../src/components/ftbot/BotControls.vue","../../src/components/ftbot/BotStatus.vue","../../src/components/ftbot/DailyStats.vue","../../src/components/ftbot/PairLockList.vue","../../src/components/ftbot/BotPerformance.vue","../../src/views/TradingView.vue"],"sourcesContent":["<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon play-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M8,5.14V19.14L19,12.14L8,5.14Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"PlayIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon stop-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M18,18H6V6H18V18Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"StopIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon pause-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M14,19H18V5H14M6,19H10V5H6V19Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"PauseIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon reload-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M2 12C2 16.97 6.03 21 11 21C13.39 21 15.68 20.06 17.4 18.4L15.9 16.9C14.63 18.25 12.86 19 11 19C4.76 19 1.64 11.46 6.05 7.05C10.46 2.64 18 5.77 18 12H15L19 16H19.1L23 12H20C20 7.03 15.97 3 11 3C6.03 3 2 7.03 2 12Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"ReloadIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon plus-box-multiple-outline-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M18 11H15V14H13V11H10V9H13V6H15V9H18M20 4V16H8V4H20M20 2H8C6.9 2 6 2.9 6 4V16C6 17.11 6.9 18 8 18H20C21.11 18 22 17.11 22 16V4C22 2.9 21.11 2 20 2M4 6H2V20C2 21.11 2.9 22 4 22H18V20H4V6Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"PlusBoxMultipleOutlineIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <b-modal\n    id=\"forceentry-modal\"\n    ref=\"modal\"\n    v-model=\"model\"\n    title=\"Force entering a trade\"\n    @show=\"resetForm\"\n    @hidden=\"resetForm\"\n    @ok=\"handleEntry\"\n  >\n    <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\n      <b-form-group\n        v-if=\"botStore.activeBot.botApiVersion >= 2.13 && botStore.activeBot.shortAllowed\"\n        label=\"Order direction (Long or Short)\"\n        label-for=\"order-direction\"\n        invalid-feedback=\"Order direction must be set\"\n        :state=\"orderSide !== undefined\"\n      >\n        <b-form-radio-group\n          id=\"order-direction\"\n          v-model=\"orderSide\"\n          :options=\"orderSideOptions\"\n          name=\"radios-btn-default\"\n          size=\"sm\"\n          buttons\n          style=\"min-width: 10em\"\n          button-variant=\"outline-primary\"\n        ></b-form-radio-group>\n      </b-form-group>\n      <b-form-group\n        label=\"Pair\"\n        label-for=\"pair-input\"\n        invalid-feedback=\"Pair is required\"\n        :state=\"selectedPair !== undefined\"\n      >\n        <b-form-input\n          id=\"pair-input\"\n          v-model=\"selectedPair\"\n          required\n          @keydown.enter=\"handleEntry\"\n          @focus=\"inputSelect\"\n        ></b-form-input>\n      </b-form-group>\n      <b-form-group\n        label=\"*Price [optional]\"\n        label-for=\"price-input\"\n        invalid-feedback=\"Price must be empty or a positive number\"\n        :state=\"!price || price > 0\"\n      >\n        <b-form-input\n          id=\"price-input\"\n          v-model=\"price\"\n          type=\"number\"\n          step=\"0.00000001\"\n          @keydown.enter=\"handleEntry\"\n        ></b-form-input>\n      </b-form-group>\n      <b-form-group\n        :label=\"`*Stake-amount in ${botStore.activeBot.stakeCurrency} [optional]`\"\n        label-for=\"stake-input\"\n        invalid-feedback=\"Stake-amount must be empty or a positive number\"\n        :state=\"!stakeAmount || stakeAmount > 0\"\n      >\n        <b-form-input\n          id=\"stake-input\"\n          v-model=\"stakeAmount\"\n          type=\"number\"\n          step=\"0.000001\"\n          @keydown.enter=\"handleEntry\"\n        ></b-form-input>\n      </b-form-group>\n      <b-form-group\n        v-if=\"botStore.activeBot.botApiVersion > 2.16 && botStore.activeBot.shortAllowed\"\n        :label=\"`*Leverage to apply [optional]`\"\n        label-for=\"leverage-input\"\n        invalid-feedback=\"Leverage must be empty or a positive number\"\n        :state=\"!leverage || leverage > 0\"\n      >\n        <b-form-input\n          id=\"leverage-input\"\n          v-model=\"leverage\"\n          type=\"number\"\n          step=\"0.01\"\n          @keydown.enter=\"handleEntry\"\n        ></b-form-input>\n      </b-form-group>\n      <b-form-group\n        label=\"OrderType\"\n        label-for=\"ordertype-input\"\n        invalid-feedback=\"OrderType\"\n        :state=\"true\"\n      >\n        <b-form-radio-group\n          id=\"ordertype-input\"\n          v-model=\"ordertype\"\n          :options=\"orderTypeOptions\"\n          name=\"radios-btn-orderType\"\n          buttons\n          button-variant=\"outline-primary\"\n          style=\"min-width: 10em\"\n          size=\"sm\"\n        ></b-form-radio-group>\n      </b-form-group>\n      <b-form-group\n        v-if=\"botStore.activeBot.botApiVersion > 1.16\"\n        label=\"*Custom entry tag Optional]\"\n        label-for=\"enterTag-input\"\n      >\n        <b-form-input\n          id=\"enterTag-input\"\n          v-model=\"enterTag\"\n          type=\"text\"\n          name=\"radios-btn-orderType\"\n        ></b-form-input>\n      </b-form-group>\n    </form>\n  </b-modal>\n</template>\n\n<script setup lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport { ForceEnterPayload, OrderSides } from '@/types';\n\nimport { computed, nextTick, ref } from 'vue';\n\nconst props = defineProps({\n  modelValue: { required: true, default: false, type: Boolean },\n  pair: { type: String, default: '' },\n});\nconst emit = defineEmits(['update:modelValue']);\nconst botStore = useBotStore();\n\nconst form = ref<HTMLFormElement>();\nconst selectedPair = ref('');\nconst price = ref<number | undefined>(undefined);\nconst stakeAmount = ref<number | undefined>(undefined);\nconst leverage = ref<number | undefined>(undefined);\n\nconst ordertype = ref('');\nconst orderSide = ref<OrderSides>(OrderSides.long);\nconst enterTag = ref('force_entry');\n\nconst orderTypeOptions = [\n  { value: 'market', text: 'Market' },\n  { value: 'limit', text: 'Limit' },\n];\nconst orderSideOptions = [\n  { value: 'long', text: 'Long' },\n  { value: 'short', text: 'Short' },\n];\n\nconst model = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(value: boolean) {\n    emit('update:modelValue', value);\n  },\n});\n\nconst checkFormValidity = () => {\n  const valid = form.value?.checkValidity();\n\n  return valid;\n};\n\nconst handleSubmit = async () => {\n  // Exit when the form isn't valid\n  if (!checkFormValidity()) {\n    return;\n  }\n\n  // call forceentry\n  const payload: ForceEnterPayload = { pair: selectedPair.value };\n  if (price.value) {\n    payload.price = Number(price.value);\n  }\n  if (ordertype.value) {\n    payload.ordertype = ordertype.value;\n  }\n  if (stakeAmount.value) {\n    payload.stakeamount = stakeAmount.value;\n  }\n  if (botStore.activeBot.botApiVersion >= 2.13 && botStore.activeBot.shortAllowed) {\n    payload.side = orderSide.value;\n  }\n  if (botStore.activeBot.botApiVersion >= 2.16 && enterTag.value) {\n    payload.entry_tag = enterTag.value;\n  }\n\n  if (leverage.value) {\n    payload.leverage = leverage.value;\n  }\n  botStore.activeBot.forceentry(payload);\n  await nextTick();\n  emit('update:modelValue', false);\n};\nconst resetForm = () => {\n  console.log('resetForm');\n  selectedPair.value = props.pair;\n  price.value = undefined;\n  stakeAmount.value = undefined;\n  ordertype.value =\n    botStore.activeBot.botState?.order_types?.forcebuy ||\n    botStore.activeBot.botState?.order_types?.force_entry ||\n    botStore.activeBot.botState?.order_types?.buy ||\n    botStore.activeBot.botState?.order_types?.entry ||\n    'limit';\n};\n\nconst handleEntry = () => {\n  // Trigger submit handler\n  handleSubmit();\n};\nconst inputSelect = (bvModalEvt) => {\n  bvModalEvt.srcElement?.select();\n};\n</script>\n","<template>\n  <b-modal\n    ref=\"removeTradeModal\"\n    v-model=\"showRef\"\n    :title=\"title\"\n    @ok=\"msgBoxOK\"\n    @cancel=\"showRef = false\"\n  >\n    {{ message }}\n  </b-modal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\n\nexport interface MsgBoxObject {\n  title: string;\n  message: string;\n  accept: () => void;\n}\nconst showRef = ref<boolean>(false);\nconst title = ref<string>('');\nconst message = ref<string>('');\nconst accept = ref<() => void>(() => {\n  console.warn('Accepted not set.');\n});\n\nconst msgBoxOK = () => {\n  accept.value();\n};\n\nconst show = (msg: MsgBoxObject) => {\n  title.value = msg.title;\n  message.value = msg.message;\n  showRef.value = true;\n  accept.value = msg.accept;\n};\n\ndefineExpose({ show });\n</script>\n\n<style scoped></style>\n","forceexit\n<template>\n  <div>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || isRunning\"\n      title=\"Start Trading\"\n      @click=\"botStore.activeBot.startBot()\"\n    >\n      <PlayIcon />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Stop Trading - Also stops handling open trades.\"\n      @click=\"handleStopBot()\"\n    >\n      <StopIcon />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"StopBuy - Stops buying, but still handles open trades\"\n      @click=\"handleStopBuy()\"\n    >\n      <PauseIcon />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading\"\n      title=\"Reload Config - reloads configuration including strategy, resetting all settings changed on the fly.\"\n      @click=\"handleReloadConfig()\"\n    >\n      <ReloadIcon />\n    </button>\n    <button\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading\"\n      title=\"Force exit all\"\n      @click=\"handleForceExit()\"\n    >\n      <ForceExitIcon />\n    </button>\n    <button\n      v-if=\"botStore.activeBot.botState && botStore.activeBot.botState.force_entry_enable\"\n      class=\"btn btn-secondary btn-sm ms-1\"\n      :disabled=\"!botStore.activeBot.isTrading || !isRunning\"\n      title=\"Force enter - Immediately enter a trade at an optional price. Exits are then handled according to strategy rules.\"\n      @click=\"forceEnter = true\"\n    >\n      <ForceEntryIcon />\n    </button>\n    <button\n      v-if=\"botStore.activeBot.isWebserverMode && false\"\n      :disabled=\"botStore.activeBot.isTrading\"\n      class=\"btn btn-secondary btn-sm ms-1\"\n      title=\"Start Trading mode\"\n      @click=\"botStore.activeBot.startTrade()\"\n    >\n      <PlayIcon />\n    </button>\n    <ForceEntryForm v-model=\"forceEnter\" :pair=\"botStore.activeBot.selectedPair\" />\n    <MessageBox ref=\"msgBox\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ForceSellPayload } from '@/types';\nimport PlayIcon from 'vue-material-design-icons/Play.vue';\nimport StopIcon from 'vue-material-design-icons/Stop.vue';\nimport PauseIcon from 'vue-material-design-icons/Pause.vue';\nimport ReloadIcon from 'vue-material-design-icons/Reload.vue';\nimport ForceExitIcon from 'vue-material-design-icons/CloseBoxMultiple.vue';\nimport ForceEntryIcon from 'vue-material-design-icons/PlusBoxMultipleOutline.vue';\nimport ForceEntryForm from './ForceEntryForm.vue';\nimport MessageBox, { MsgBoxObject } from '@/components/general/MessageBox.vue';\nimport { defineComponent, computed, ref } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nexport default defineComponent({\n  name: 'BotControls',\n  components: {\n    ForceEntryForm,\n    PlayIcon,\n    StopIcon,\n    PauseIcon,\n    ReloadIcon,\n    ForceExitIcon,\n    ForceEntryIcon,\n    MessageBox,\n  },\n  setup() {\n    const botStore = useBotStore();\n    const forceEnter = ref<boolean>(false);\n    const msgBox = ref<typeof MessageBox>();\n\n    const isRunning = computed((): boolean => {\n      return botStore.activeBot.botState?.state === 'running';\n    });\n\n    const handleStopBot = () => {\n      const msg: MsgBoxObject = {\n        title: 'Stop Bot',\n        message: 'Stop the bot loop from running?',\n        accept: () => {\n          botStore.activeBot.stopBot();\n        },\n      };\n      msgBox.value?.show(msg);\n    };\n\n    const handleStopBuy = () => {\n      const msg: MsgBoxObject = {\n        title: 'Stop Buying',\n        message: 'Freqtrade will continue to handle open trades.',\n        accept: () => {\n          botStore.activeBot.stopBuy();\n        },\n      };\n      msgBox.value?.show(msg);\n    };\n\n    const handleReloadConfig = () => {\n      const msg: MsgBoxObject = {\n        title: 'Reload',\n        message: 'Reload configuration (including strategy)?',\n        accept: () => {\n          console.log('reload...');\n          botStore.activeBot.reloadConfig();\n        },\n      };\n      msgBox.value?.show(msg);\n    };\n\n    const handleForceExit = () => {\n      const msg: MsgBoxObject = {\n        title: 'ForceExit all',\n        message: 'Really forceexit ALL trades?',\n        accept: () => {\n          const payload: ForceSellPayload = {\n            tradeid: 'all',\n            // TODO: support ordertype (?)\n          };\n          botStore.activeBot.forceexit(payload);\n        },\n      };\n      msgBox.value?.show(msg);\n    };\n    return {\n      handleStopBot,\n      handleStopBuy,\n      handleReloadConfig,\n      handleForceExit,\n      forceEnter,\n      botStore,\n      isRunning,\n      msgBox,\n    };\n  },\n});\n</script>\n","<template>\n  <div v-if=\"botStore.activeBot.botState\">\n    <p>\n      Running Freqtrade <strong>{{ botStore.activeBot.version }}</strong>\n    </p>\n    <p>\n      Running with\n      <strong>\n        {{ botStore.activeBot.botState.max_open_trades }}x{{\n          botStore.activeBot.botState.stake_amount\n        }}\n        {{ botStore.activeBot.botState.stake_currency }}\n      </strong>\n      on\n      <strong>{{ botStore.activeBot.botState.exchange }}</strong> in\n      <strong>{{ botStore.activeBot.botState.trading_mode || 'spot' }}</strong> markets, with\n      Strategy <strong>{{ botStore.activeBot.botState.strategy }}</strong\n      >.\n    </p>\n    <p v-if=\"'stoploss_on_exchange' in botStore.activeBot.botState\">\n      Stoploss on exchange is\n      <strong>{{\n        botStore.activeBot.botState.stoploss_on_exchange ? 'enabled' : 'disabled'\n      }}</strong\n      >.\n    </p>\n    <p>\n      Currently <strong>{{ botStore.activeBot.botState.state }}</strong\n      >,\n      <strong>force entry: {{ botStore.activeBot.botState.force_entry_enable }}</strong>\n    </p>\n    <p>\n      <strong>{{ botStore.activeBot.botState.dry_run ? 'Dry-Run' : 'Live' }}</strong>\n    </p>\n    <hr />\n    <p>\n      Avg Profit {{ formatPercent(botStore.activeBot.profit.profit_all_ratio_mean) }} (&sum;\n      {{ formatPercent(botStore.activeBot.profit.profit_all_ratio_sum) }}) in\n      {{ botStore.activeBot.profit.trade_count }} Trades, with an average duration of\n      {{ botStore.activeBot.profit.avg_duration }}. Best pair:\n      {{ botStore.activeBot.profit.best_pair }}.\n    </p>\n    <p v-if=\"botStore.activeBot.profit.first_trade_timestamp\">\n      <span v-if=\"botStore.activeBot.profit.bot_start_timestamp\" class=\"d-block\">\n        Bot start date:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.bot_start_timestamp\" show-timezone />\n        </strong>\n      </span>\n      <span class=\"d-block\">\n        First trade opened:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.first_trade_timestamp\" show-timezone />\n        </strong>\n      </span>\n      <span class=\"d-block\">\n        Last trade opened:\n        <strong>\n          <DateTimeTZ :date=\"botStore.activeBot.profit.latest_trade_timestamp\" show-timezone />\n        </strong>\n      </span>\n    </p>\n    <p>\n      <span v-if=\"botStore.activeBot.profit.profit_factor\" class=\"d-block\">\n        Profit factor:\n        {{ botStore.activeBot.profit.profit_factor.toFixed(2) }}\n      </span>\n      <span v-if=\"botStore.activeBot.profit.trading_volume\" class=\"d-block\">\n        Trading volume:\n        {{\n          formatPriceCurrency(\n            botStore.activeBot.profit.trading_volume,\n            botStore.activeBot.botState.stake_currency,\n            botStore.activeBot.botState.stake_currency_decimals ?? 3,\n          )\n        }}\n      </span>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { formatPercent, formatPriceCurrency } from '@/shared/formatters';\nimport DateTimeTZ from '@/components/general/DateTimeTZ.vue';\n\nimport { defineComponent } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nexport default defineComponent({\n  name: 'BotStatus',\n  components: { DateTimeTZ },\n  setup() {\n    const botStore = useBotStore();\n    return {\n      formatPercent,\n      formatPriceCurrency,\n      botStore,\n    };\n  },\n});\n</script>\n","<template>\n  <div>\n    <div class=\"mb-2\">\n      <label class=\"me-auto h3\">Daily Stats</label>\n      <b-button class=\"float-end\" size=\"sm\" @click=\"botStore.activeBot.getDaily\">&#x21bb;</b-button>\n    </div>\n    <div>\n      <DailyChart\n        v-if=\"botStore.activeBot.dailyStats.data\"\n        :daily-stats=\"botStore.activeBot.dailyStatsSorted\"\n      />\n    </div>\n    <div>\n      <b-table class=\"table-sm\" :items=\"botStore.activeBot.dailyStats.data\" :fields=\"dailyFields\">\n      </b-table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted } from 'vue';\nimport DailyChart from '@/components/charts/DailyChart.vue';\nimport { formatPercent } from '@/shared/formatters';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport { TableField } from 'bootstrap-vue-next';\n\nexport default defineComponent({\n  name: 'DailyStats',\n  components: {\n    DailyChart,\n  },\n  setup() {\n    const botStore = useBotStore();\n    const dailyFields = computed<TableField[]>(() => {\n      const res: TableField[] = [\n        { key: 'date', label: 'Day' },\n        {\n          key: 'abs_profit',\n          label: 'Profit',\n          // formatter: (value: unknown) => formatPrice(value as number),\n        },\n        {\n          key: 'fiat_value',\n          label: `In ${botStore.activeBot.dailyStats.fiat_display_currency}`,\n          // formatter: (value: unknown) => formatPrice(value as number, 2),\n        },\n        { key: 'trade_count', label: 'Trades' },\n      ];\n      if (botStore.activeBot.botApiVersion >= 2.16)\n        res.push({\n          key: 'rel_profit',\n          label: 'Profit%',\n          formatter: (value: unknown) => formatPercent(value as number, 2),\n        });\n      return res;\n    });\n    onMounted(() => {\n      botStore.activeBot.getDaily();\n    });\n\n    return {\n      botStore,\n      dailyFields,\n    };\n  },\n});\n</script>\n","<template>\n  <div>\n    <div class=\"mb-2\">\n      <label class=\"me-auto h3\">Pair Locks</label>\n      <b-button class=\"float-end\" size=\"sm\" @click=\"botStore.activeBot.getLocks\">&#x21bb;</b-button>\n    </div>\n    <div>\n      <b-table class=\"table-sm\" :items=\"botStore.activeBot.activeLocks\" :fields=\"tableFields\">\n        <template #cell(actions)=\"row\">\n          <b-button\n            class=\"btn-xs ms-1\"\n            size=\"sm\"\n            title=\"Delete trade\"\n            @click=\"removePairLock(row.item)\"\n          >\n            <DeleteIcon :size=\"16\" />\n          </b-button>\n        </template>\n      </b-table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { timestampms } from '@/shared/formatters';\nimport { Lock } from '@/types';\n\nimport DeleteIcon from 'vue-material-design-icons/Delete.vue';\nimport { showAlert } from '@/stores/alerts';\nimport { defineComponent } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nexport default defineComponent({\n  name: 'PairLockList',\n  components: { DeleteIcon },\n  setup() {\n    const botStore = useBotStore();\n\n    const tableFields = [\n      { key: 'pair', label: 'Pair' },\n      { key: 'lock_end_timestamp', label: 'Until', formatter: 'timestampms' },\n      { key: 'reason', label: 'Reason' },\n      { key: 'actions' },\n    ];\n\n    const removePairLock = (item: Lock) => {\n      console.log(item);\n      if (item.id !== undefined) {\n        botStore.activeBot.deleteLock(item.id);\n      } else {\n        showAlert('This Freqtrade version does not support deleting locks.');\n      }\n    };\n\n    return {\n      timestampms,\n      botStore,\n      tableFields,\n      removePairLock,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <div>\n    <div class=\"mb-2\">\n      <h3>Performance</h3>\n    </div>\n    <b-table\n      class=\"table-sm\"\n      :items=\"botStore.activeBot.performanceStats\"\n      :fields=\"tableFields\"\n    ></b-table>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { formatPrice } from '@/shared/formatters';\nimport { defineComponent, computed } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport { TableField } from 'bootstrap-vue-next';\n\nexport default defineComponent({\n  name: 'BotPerformance',\n  setup() {\n    const botStore = useBotStore();\n    const tableFields = computed<TableField[]>(() => {\n      return [\n        { key: 'pair', label: 'Pair' },\n        { key: 'profit', label: 'Profit %' },\n        {\n          key: 'profit_abs',\n          label: `Profit ${botStore.activeBot.botState?.stake_currency}`,\n          formatter: (v: unknown) => formatPrice(v as number, 5),\n        },\n        { key: 'count', label: 'Count' },\n      ];\n    });\n    return {\n      tableFields,\n      botStore,\n    };\n  },\n});\n</script>\n","<template>\n  <grid-layout\n    class=\"h-100 w-100\"\n    :row-height=\"50\"\n    :layout=\"gridLayoutData\"\n    :vertical-compact=\"false\"\n    :margin=\"[5, 5]\"\n    :responsive-layouts=\"responsiveGridLayouts\"\n    :is-resizable=\"!isLayoutLocked\"\n    :is-draggable=\"!isLayoutLocked\"\n    :responsive=\"true\"\n    :cols=\"{ lg: 12, md: 12, sm: 12, xs: 4, xxs: 2 }\"\n    :col-num=\"12\"\n    @update:breakpoint=\"breakpointChanged\"\n  >\n    <template #default=\"{ gridItemProps }\">\n      <grid-item\n        v-if=\"gridLayoutMultiPane.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutMultiPane.i\"\n        :x=\"gridLayoutMultiPane.x\"\n        :y=\"gridLayoutMultiPane.y\"\n        :w=\"gridLayoutMultiPane.w\"\n        :h=\"gridLayoutMultiPane.h\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Multi Pane\">\n          <div class=\"mt-1 d-flex justify-content-center\">\n            <BotControls class=\"mt-1 mb-2\" />\n          </div>\n          <b-tabs content-class=\"mt-3\" class=\"mt-1\">\n            <b-tab title=\"Pairs combined\" active>\n              <PairSummary\n                :pairlist=\"botStore.activeBot.whitelist\"\n                :current-locks=\"botStore.activeBot.activeLocks\"\n                :trades=\"botStore.activeBot.openTrades\"\n              />\n            </b-tab>\n            <b-tab title=\"General\">\n              <BotStatus />\n            </b-tab>\n            <b-tab title=\"Performance\">\n              <BotPerformance class=\"performance-view\" />\n            </b-tab>\n            <b-tab title=\"Balance\" lazy>\n              <Balance />\n            </b-tab>\n            <b-tab title=\"Daily Stats\" lazy>\n              <DailyStats />\n            </b-tab>\n\n            <b-tab title=\"Pairlist\" lazy>\n              <FTBotAPIPairList />\n            </b-tab>\n            <b-tab title=\"Pair Locks\" lazy>\n              <PairLockList />\n            </b-tab>\n          </b-tabs>\n        </DraggableContainer>\n      </grid-item>\n      <grid-item\n        v-if=\"gridLayoutOpenTrades.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutOpenTrades.i\"\n        :x=\"gridLayoutOpenTrades.x\"\n        :y=\"gridLayoutOpenTrades.y\"\n        :w=\"gridLayoutOpenTrades.w\"\n        :h=\"gridLayoutOpenTrades.h\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Open Trades\">\n          <TradeList\n            class=\"open-trades\"\n            :trades=\"botStore.activeBot.openTrades\"\n            title=\"Open trades\"\n            :active-trades=\"true\"\n            empty-text=\"Currently no open trades.\"\n          />\n        </DraggableContainer>\n      </grid-item>\n      <grid-item\n        v-if=\"gridLayoutTradeHistory.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradeHistory.i\"\n        :x=\"gridLayoutTradeHistory.x\"\n        :y=\"gridLayoutTradeHistory.y\"\n        :w=\"gridLayoutTradeHistory.w\"\n        :h=\"gridLayoutTradeHistory.h\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Closed Trades\">\n          <trade-list\n            class=\"trade-history\"\n            :trades=\"botStore.activeBot.closedTrades\"\n            title=\"Trade history\"\n            :show-filter=\"true\"\n            empty-text=\"No closed trades so far.\"\n          />\n        </DraggableContainer>\n      </grid-item>\n      <grid-item\n        v-if=\"\n          botStore.activeBot.detailTradeId &&\n          botStore.activeBot.tradeDetail &&\n          gridLayoutTradeDetail.h != 0\n        \"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutTradeDetail.i\"\n        :x=\"gridLayoutTradeDetail.x\"\n        :y=\"gridLayoutTradeDetail.y\"\n        :w=\"gridLayoutTradeDetail.w\"\n        :h=\"gridLayoutTradeDetail.h\"\n        :min-h=\"4\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Trade Detail\">\n          <TradeDetail\n            :trade=\"botStore.activeBot.tradeDetail\"\n            :stake-currency=\"botStore.activeBot.stakeCurrency\"\n          />\n        </DraggableContainer>\n      </grid-item>\n      <grid-item\n        v-if=\"gridLayoutTradeDetail.h != 0\"\n        v-bind=\"gridItemProps\"\n        :i=\"gridLayoutChartView.i\"\n        :x=\"gridLayoutChartView.x\"\n        :y=\"gridLayoutChartView.y\"\n        :w=\"gridLayoutChartView.w\"\n        :h=\"gridLayoutChartView.h\"\n        :min-h=\"6\"\n        drag-allow-from=\".card-header\"\n      >\n        <DraggableContainer header=\"Chart\">\n          <CandleChartContainer\n            :available-pairs=\"botStore.activeBot.whitelist\"\n            :historic-view=\"!!false\"\n            :timeframe=\"botStore.activeBot.timeframe\"\n            :trades=\"botStore.activeBot.allTrades\"\n          >\n          </CandleChartContainer>\n        </DraggableContainer>\n      </grid-item>\n    </template>\n  </grid-layout>\n</template>\n\n<script setup lang=\"ts\">\nimport { GridItemData } from '@/types';\n\nimport Balance from '@/components/ftbot/BotBalance.vue';\nimport BotControls from '@/components/ftbot/BotControls.vue';\nimport BotStatus from '@/components/ftbot/BotStatus.vue';\nimport CandleChartContainer from '@/components/charts/CandleChartContainer.vue';\nimport DailyStats from '@/components/ftbot/DailyStats.vue';\nimport DraggableContainer from '@/components/layout/DraggableContainer.vue';\nimport FTBotAPIPairList from '@/components/ftbot/FTBotAPIPairList.vue';\nimport PairLockList from '@/components/ftbot/PairLockList.vue';\nimport PairSummary from '@/components/ftbot/PairSummary.vue';\nimport BotPerformance from '@/components/ftbot/BotPerformance.vue';\nimport TradeDetail from '@/components/ftbot/TradeDetail.vue';\nimport TradeList from '@/components/ftbot/TradeList.vue';\n\nimport { ref, computed } from 'vue';\nimport { useLayoutStore, findGridLayout, TradeLayout } from '@/stores/layout';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nconst botStore = useBotStore();\nconst layoutStore = useLayoutStore();\nconst currentBreakpoint = ref('');\n\nconst breakpointChanged = (newBreakpoint) => {\n  // console.log('breakpoint:', newBreakpoint);\n  currentBreakpoint.value = newBreakpoint;\n};\nconst isResizableLayout = computed(() =>\n  ['', 'sm', 'md', 'lg', 'xl'].includes(currentBreakpoint.value),\n);\nconst isLayoutLocked = computed(() => {\n  return layoutStore.layoutLocked || !isResizableLayout.value;\n});\nconst gridLayoutData = computed((): GridItemData[] => {\n  if (isResizableLayout.value) {\n    return layoutStore.tradingLayout;\n  }\n  return [...layoutStore.getTradingLayoutSm];\n});\n\nconst gridLayoutMultiPane = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.multiPane);\n});\n\nconst gridLayoutOpenTrades = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.openTrades);\n});\n\nconst gridLayoutTradeHistory = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.tradeHistory);\n});\n\nconst gridLayoutTradeDetail = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.tradeDetail);\n});\n\nconst gridLayoutChartView = computed(() => {\n  return findGridLayout(gridLayoutData.value, TradeLayout.chartView);\n});\n\nconst responsiveGridLayouts = computed(() => {\n  return {\n    sm: layoutStore.getTradingLayoutSm,\n  };\n});\n</script>\n\n<style scoped></style>\n"],"names":["_sfc_main","_hoisted_3","_createElementBlock","_mergeProps","_ctx","$props","_cache","$event","_createElementVNode","_openBlock","botStore","useBotStore","form","ref","selectedPair","price","stakeAmount","leverage","ordertype","orderSide","OrderSides","enterTag","orderTypeOptions","orderSideOptions","model","computed","props","value","emit","checkFormValidity","_a","handleSubmit","payload","nextTick","resetForm","_b","_d","_c","_f","_e","_h","_g","handleEntry","inputSelect","bvModalEvt","showRef","title","message","accept","msgBoxOK","expose","msg","_sfc_main$5","defineComponent","ForceEntryForm","PlayIcon","StopIcon","PauseIcon","ReloadIcon","ForceExitIcon","ForceEntryIcon","MessageBox","forceEnter","msgBox","isRunning","_resolveComponent","_createVNode","_component_PlayIcon","_hoisted_1","_component_StopIcon","_hoisted_2","_component_PauseIcon","_component_ReloadIcon","_hoisted_4","_component_ForceExitIcon","_hoisted_5","_hoisted_6","_createCommentVNode","_component_ForceEntryForm","_sfc_main$4","DateTimeTZ","formatPercent","formatPriceCurrency","_hoisted_8","_hoisted_9","_createTextVNode","_toDisplayString","_component_DateTimeTZ","_hoisted_7","_sfc_main$3","DailyChart","dailyFields","res","onMounted","_component_b_button","_createBlock","_component_DailyChart","_component_b_table","_sfc_main$2","DeleteIcon","timestampms","item","showAlert","_withCtx","row","_sfc_main$1","v","formatPrice","layoutStore","useLayoutStore","currentBreakpoint","breakpointChanged","newBreakpoint","isResizableLayout","isLayoutLocked","gridLayoutData","gridLayoutMultiPane","findGridLayout","TradeLayout","gridLayoutOpenTrades","gridLayoutTradeHistory","gridLayoutTradeDetail","gridLayoutChartView","responsiveGridLayouts"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}